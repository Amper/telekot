name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - '**.md'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java:
          - 8
          - - 11.0.x
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Set up Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          settings-path: ${{ github.workspace }}
      - name: Set up Gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-${{ matrix.java }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.java }}-gradle-
      - name: Build with Gradle
        run: gradle clean build
        env:
          TEST_TELEGRAM_BOT_TOKEN: ${{ secrets.TEST_TELEGRAM_BOT_TOKEN }}
      - name: Upload coverage to Codecov
        if: matrix.java != 8
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          yml: ./codecov.yml
  ktlint:
    name: Check Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: ktlint
        uses: ScaCap/action-ktlint@master
        with:
          github_token: ${{ secrets.github_token }}
  release-notes:
    name: Prepare release draft
    runs-on: ubuntu-latest
    steps:
      - name: Release Drafter
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
